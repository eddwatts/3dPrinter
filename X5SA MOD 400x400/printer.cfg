# This file contains common pin mappings for the FlashForge-Creator-Pro
# To use this config, the firmware should be compiled for
# the Atmel atmega2560.

# Use the following command to flash the board:
#  avrdude -c stk500v2 -p m2560 -P /dev/serial/by-id/usb-MakerBot_Industries_The_Replicator_557373136313514061A2-if00 -b 57600 -D -U out/klipper.elf.hex

# See docs/Config_Reference.md for a description of parameters.
[include fluidd.cfg]
[include timelapse.cfg]
[include stealthburner_leds.cfg]
[include newstart.cfg]

#[include OrbiterSensor.cfg]

[save_variables]
filename: variables.cfg

[mcu]
canbus_uuid: 70559fc0ed52

[mcu MKS_THR]
canbus_uuid: abb8d87270ca

[mcu rpi]
serial: /tmp/klipper_host_mcu

[display]
lcd_type:ssd1306
i2c_mcu: rpi
i2c_address: 60 # 0x3C
i2c_bus: i2c.1

#[display]
#lcd_type:sh1106
#i2c_mcu: rpi
#i2c_address: 60 # 0x3C
#i2c_bus: i2c.1

#[wled lounge]
#type: http
#address: 192.168.1.45
#initial_red: 0.5
#initial_green: 0.4
#initial_blue: 0.3
#chain_count: 42

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 5500
max_z_velocity: 15
max_z_accel: 50

[heater_fan hotend_fan]
pin:MKS_THR:gpio1
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0

## FAN1 - part cooling
[fan]
pin: MKS_THR:gpio2
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[fan_generic Hotend_Fan_2]
pin:MKS_THR:gpio3
max_power: 1.0
kick_start_time: 0.5
off_below: 0.10

[controller_fan MOSFET]
pin: PA0
max_power: 0.6
idle_timeout:30
#hardware_pwm: False
kick_start_time: 1
heater:heater_bed

[controller_fan Monster8]
pin: PA1
max_power: 0.8
kick_start_time: 1
idle_timeout:600
#hardware_pwm: False
stepper:stepper_x,stepper_y,stepper_z,stepper_z1,stepper_z2

[temperature_fan Raspberry_Pi]
pin: PA2
max_power: 1.0
sensor_type: temperature_host
max_temp: 75
min_temp: 20
target_temp: 50
#hardware_pwm: False
kick_start_time: 0.5
#idle_timeout:30
control: watermark 

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# MCU - X -> B Stepper - Left Back (looking from front)
[stepper_x]
step_pin: PC14
dir_pin: !PC13
enable_pin: !PC15
microsteps: 128
full_steps_per_rotation:200
rotation_distance: 40
endstop_pin: !MKS_THR:gpio24
# endstop_pin: tmc2209_stepper_x:virtual_endstop
# homing_retract_dist: 0
position_endstop: -9
position_min: -9
position_max: 409
homing_speed: 80
homing_retract_dist: 10
second_homing_speed: 10.0

[tmc2209 stepper_x]
uart_pin: PE6
run_current: 0.800
hold_current: 0.500
interpolate: False
#stealthchop_threshold: 999999
#stealthchop_threshold: 0
driver_SGTHRS: 255
sense_resistor: 0.110

# MCU - X1 -> C Stepper - Right Front (looking from front)
#[stepper_x1]
#step_pin: PE1
#dir_pin: PE0
#enable_pin: !PE2
#microsteps: 128
#rotation_distance: 20

#[tmc2209 stepper_x1]
#uart_pin: PB7
#microsteps: 128
#run_current: 0.800
#hold_current: 0.500
#interpolate: False
#stealthchop_threshold: 999999
#stealthchop_threshold: 0
#driver_SGTHRS: 255
#sense_resistor: 0.110


# MCU - Y -> A Stepper - Right Back (looking from front)
[stepper_y]
step_pin: PE5
dir_pin: !PE4
enable_pin: !PC15
microsteps: 128
full_steps_per_rotation:200
rotation_distance: 40
endstop_pin: !PA15
# endstop_pin: tmc2209_stepper_y:virtual_endstop
#position_endstop: 403
#position_min: -2
#position_max: 403
position_endstop: -4
position_min: -4
position_max: 403

homing_speed: 80
second_homing_speed: 10.0

[tmc2209 stepper_y]
uart_pin: PE3
run_current: 0.800
hold_current: 0.500
interpolate: False
#stealthchop_threshold: 999999
#stealthchop_threshold: 0
driver_SGTHRS: 255
sense_resistor: 0.110

# MCU - Y1 -> D Stepper - Left Front (looking from front)
#[stepper_y1]
#step_pin: PB5
#dir_pin: PB4
#enable_pin: !PB6
#microsteps: 16
#rotation_distance: 20

#[tmc2209 stepper_y1]
#uart_pin: PB3
#microsteps: 128
#run_current: 0.800
#hold_current: 0.500
#interpolate: False
#stealthchop_threshold: 999999
#stealthchop_threshold: 0
#driver_SGTHRS: 255
#sense_resistor: 0.110

# Z MCU - X -> Z0 Stepper - Front Left
[stepper_z]
step_pin: PD2
dir_pin: PD1
enable_pin: !PD3
position_max: 400
position_min: -2
homing_speed: 12
#endstop_pin: !PB13  # PB12 for Z-max; endstop have'!' is NO
#position_endstop: -2
endstop_pin: probe:z_virtual_endstop
microsteps: 128
rotation_distance: 4

[tmc2209 stepper_z]
uart_pin: PD0
run_current: 0.800
hold_current: 0.500
interpolate: false
#sense_resistor: 0.110
#stealthchop_threshold: 0
#run_current: 0.580
#hold_current: 0.500
#interpolate: False
#stealthchop_threshold: 999999


# Z MCU - Y -> Z1 Stepper - Rear
[stepper_z1]
step_pin: PC7
dir_pin: PC6
enable_pin: !PC8
microsteps: 128
rotation_distance: 4

[tmc2209 stepper_z1]
uart_pin: PD15
run_current: 0.800
hold_current: 0.500
interpolate: false
#run_current: 0.580
#hold_current: 0.500
#interpolate: False
#stealthchop_threshold: 999999
##interpolate: false
##run_current: 0.800
##hold_current: 0.500
##sense_resistor: 0.110
##stealthchop_threshold: 0

# Z MCU - E0 -> Z3 Stepper - Front Right
[stepper_z2]
step_pin: PD13
dir_pin: PD12
enable_pin: !PB6
microsteps: 128
rotation_distance: 4

[tmc2209 stepper_z2]
uart_pin: PD11
run_current: 0.800
hold_current: 0.500
interpolate: false
#run_current: 0.580
#hold_current: 0.500
#interpolate: False
#stealthchop_threshold: 999999
##interpolate: false
##run_current: 0.800
##hold_current: 0.500
##sense_resistor: 0.110
##stealthchop_threshold: 0

#[stepper_z3]
#step_pin: PD6
#dir_pin: PD5
#enable_pin: !PD7
#microsteps: 128
#rotation_distance: 4

#[tmc2209 stepper_z3]
#uart_pin: PD4
#microsteps: 128
#run_current: 0.800
#hold_current: 0.500
#interpolate: false


[z_tilt]
horizontal_move_z: 30
speed: 500 #50 #120
z_positions: -51,0
  136,440
  434,0
points: 40,20
  171,390
  409,20
retry_tolerance: 0.05
retries: 20


[screws_tilt_adjust]
screw1:40,0
screw1_name:Front Left
screw2:171,396
screw2_name:Rear
screw3:409,0
screw3_name:Front Right

[heater_bed]
heater_pin: PB10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC0
max_power: 1.0
control = pid
pid_kp = 68.097
pid_ki = 1.138
pid_kd = 1018.896
min_temp: 0
max_temp: 130

[neopixel Printer_rgb]
pin: PC5
chain_count: 24
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0

[safe_z_home]
home_xy_position: 200, 200
speed: 50
z_hop: 10
z_hop_speed: 5

[bed_screws]
screw1: 40,0
screw2: 171,296
screw3: 409,0

[bed_mesh]
speed: 500
horizontal_move_z: 5
mesh_min: 22,20
mesh_max: 376,380
probe_count: 7, 7
mesh_pps: 2, 2
algorithm: bicubic
#bicubic_tension: 0.2
#move_check_distance: 3
#split_delta_z: .025
#fade_start: 1
#fade_end: 10
#fade_target: 0

[adxl345]
cs_pin: MKS_THR:gpio13
spi_software_sclk_pin: MKS_THR:gpio14
spi_software_mosi_pin: MKS_THR:gpio15
spi_software_miso_pin: MKS_THR:gpio12
axes_map: x,y,z

[resonance_tester]
accel_chip: adxl345
probe_points:
    200, 200, 20  # an example

[extruder]
step_pin: MKS_THR:gpio5
dir_pin: !MKS_THR:gpio4
enable_pin: !MKS_THR:gpio10
microsteps: 32
#rotation_distance: 6.6000896
rotation_distance: 19.67993856 #22.478 # Titan Extruder Clone Rotation Distance
gear_ratio: 66:22 # Titan Extruder Clone Gear Ratio
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: MKS_THR:gpio0
sensor_pin: MKS_THR:gpio26
sensor_type: ATC Semitec 104GT-2
control = pid
pid_kp = 68.097
pid_ki = 1.138
pid_kd = 1018.896
min_temp: 0
max_temp: 300

[tmc2209 extruder]
uart_pin: MKS_THR:gpio6
#run_current: 0.650
#stealthchop_threshold: 999999
interpolate: False
run_current: 0.800
hold_current: 0.500
stealthchop_threshold: 0

#[neopixel hotend_rgb]
#pin:MKS_THR:gpio20
#chain_count: 2
#color_order: GRB
#initial_RED: 0.0
#initial_GREEN: 0.0
#initial_BLUE: 0.0

[bltouch]
sensor_pin:^MKS_THR:gpio21
control_pin:MKS_THR:gpio11
x_offset: -30
y_offset: -15
z_offset: 1.90
#samples: 5
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.10
#samples_tolerance_retries: 1

[filament_motion_sensor filament_sensor]
detection_length: 10.0
extruder: extruder
#switch_pin: ^MKS_THR:gpio25
switch_pin: ^PA13
pause_on_runout: True ; This can be set to false to debug false positives putting the sensor in "monitor mode". The printer will not pause but it will run the runout_gcode below. 
event_delay: 3.0
pause_delay: 0.5
runout_gcode:
    M117 Runout Detected!

[display_status]

[delayed_gcode DISABLEFILAMENTSENSOR] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

[gcode_macro SFS_ENABLE] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 ENABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1 ; Put your filament sensor's name after SENSOR=    

[gcode_macro SFS_DISABLE] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 DISABLING the Smart Filament Sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0 ; Put your filament sensor's name after SENSOR=

#[gcode_macro FILAMENT_RUNOUT]
#gcode:
#    PAUSE

[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}

[gcode_macro Level_Bed]
gcode:
  Z_TILT_ADJUST
  BED_MESH_CALIBRATE 

[gcode_macro PARK]
gcode:
    {% set th = printer.toolhead %}
    G0 Z40 F20000 
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z40 F30000 

[gcode_macro G32]
gcode:
    SAVE_GCODE_STATE NAME=STATE_G32
    G90
    G28
    Z_TILT_ADJUST
    G28
    PARK
    RESTORE_GCODE_STATE NAME=STATE_G32

[gcode_macro M0]
gcode:
  PAUSE

#[gcode_macro OLD_START_PRINT]
#gcode:
#    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
#    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
#    {% set svv = printer.save_variables.variables %}
##    SFS_ENABLE
#    set_led led=hotend_rgb red=0 green=1 blue=0    
#    set_led led=Printer_rgb red=0 green=1 blue=0    
#    set_led led=Printer_rgb red=0 green=1 blue=0    
#    set_led led=Printer_rgb red=0 green=1 blue=0    
#    set_led led=Printer_rgb red=0 green=1 blue=0    
#    M117 #Home Head
#    G28
#    M117 #Z Tilt Adjust    
#    Z_TILT_ADJUST
##    G1 Z40 F300   
#    M117 Heating Bead
#    set_led led=hotend_rgb red=0 green=1 blue=0    
#    set_led led=Printer_rgb red=1 green=0 blue=0    
#    set_led led=Printer_rgb red=1 green=0 blue=0    
#    set_led led=Printer_rgb red=1 green=0 blue=0    
#    set_led led=Printer_rgb red=1 green=0 blue=0    
#    PARK
#    # Start bed heating
#    M140 S{BED_TEMP}
#    # Use absolute coordinates
#    G90
#    # Reset the G-Code Z offset (adjust Z offset if needed)
#    SET_GCODE_OFFSET Z=0.0
#    # Home the printer
#    # Wait for bed to reach temperature
#    M190 S{BED_TEMP}
#    {% if printer.heater_bed.temperature > params.T_BED|float*0.89 %}
#    {% set heatsoakt = 2 %}
#    {% elif printer.heater_bed.temperature > params.T_BED|float*0.79 %}
#    {% set heatsoakt = 4 %}
#    {% elif printer.heater_bed.temperature > params.T_BED|float*0.69 %}
#    {% set heatsoakt = 6 %}
#    {% elif printer.heater_bed.temperature > params.T_BED|float*0.59 %}
#    {% set heatsoakt = 8 %}
#    {% else %}
#    {% set heatsoakt = 10 %}
#    {% endif %}
#    M117 heat soake { heatsoakt }m
#    G4 p{heatsoakt * 1000 * 60}
#
#    # Set and wait for nozzle to reach temperature
#    set_led led=Printer_rgb red=1 green=1 blue=1    
#    set_led led=Printer_rgb red=1 green=1 blue=1    
#    set_led led=Printer_rgb red=1 green=1 blue=1    
#    set_led led=Printer_rgb red=1 green=1 blue=1    
#    set_led led=hotend_rgb red=1 green=0 blue=0
#    M104 S{EXTRUDER_TEMP}
#    M117 Meshing Bed
#    BED_MESH_CALIBRATE
#    BED_MESH_PROFILE SAVE=p1
#    BED_MESH_PROFILE LOAD="p1"
#    M117 Heating hotend
#    M109 S{EXTRUDER_TEMP}
#    set_led led=hotend_rgb red=1 green=1 blue=1
#    M117 Start Print
#    # Move the nozzle near the bed
#    #G1 Z5 F3000
#    # Move the nozzle very close to the bed
#    #G1 Z0.15 F300
##    G1 Y0.4 F8000.0
##    G1 Z0.4 F8000.0
##    G1 X55.0 E20.0 F1073.0
##    G1 X5.0 E13.0 F1800.0
##    G1 X55.0 E8.0 F2000.0
##    G1 Z1 F1000.0
##    G92 E0 ;reset extruder

[gcode_macro END_PRINT]
gcode:
  # safe anti-stringing move coords
  {% set th = printer.toolhead %}
  {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
  {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
  {% set z_safe = [th.position.z + 50, th.axis_maximum.z]|min %}
	SAVE_GCODE_STATE NAME=STATE_PRINT_END
	M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-5.0 F1800                 ; retract filament
	TURN_OFF_HEATERS
  G90                                      ; absolute positioning
  G0 X{x_safe} Y{y_safe} Z{z_safe} F80000  ; move nozzle to remove stringing
  #G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} F3600  ; park nozzle at rear
	G0 X{th.axis_maximum.x//2} Y400 F80000  ; park nozzle at rear
	BED_MESH_CLEAR
  RESTORE_GCODE_STATE NAME=STATE_PRINT_END
  set_led led=Printer_rgb red=0 green=0 blue=0    
  set_led led=Printer_rgb red=0 green=0 blue=0
  set_led led=Printer_rgb red=0 green=0 blue=0
  set_led led=Printer_rgb red=0 green=0 blue=0
  set_led led=sb_leds red=0 green=0 blue=0
  SFS_DISABLE
  SET_PIN PIN=nevermore VALUE=1                      # Turns on the nevermore

[gcode_macro G29]
gcode:
  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=STATE_G29
    G90
    G28
    Z_TILT_ADJUST
    G28
    PARK
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=p1
    BED_MESH_PROFILE LOAD="p1"
    RESTORE_GCODE_STATE NAME=STATE_G29
  {% endif %}

[gcode_macro UNLOAD_FILAMENT]
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default (220) | float %}
  SAVE_GCODE_STATE NAME=unload_state
  G91
  M117 Heating...
  M109 S{EXTRUDER_TEMP} # Heat up hotend to 220 as default as that should work OK with most filaments.
  G92 EO                # Reset extruder
# M83
# Set Extruder to Relative
# max_extrude_only_distance: 1000 # This doesn't seem to work for some as of yet undetermined reason
  M117 Unloading filament...
# Extrude a bit
  GO E10 F300
# Push back the filament to smash any stringing
  GO E5 F3600
# Extract back fast into the cold zone
  GO E-15 F3600
# Continue extraction slowly, allow the filament time to cool solid before it reaches the gears
  GO E-20 F300
  GO E-49 F3600
  GO E-49 F3600
  M117 Filament unloaded!
  G91 #Reset
  RESPOND MSG="Filament unloaded! Please inspect the tip of the filament before reloading."
  RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro LOAD_FILAMENT]
gcode:
#  {% set max_velocity printer.configfile.settings['extruder'].max_extrude_only_velocity %}
  {% set speed = params.SPEED|default(300) %}
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP | default (220) | float %}
  #{% set max_velocity printer.configfile.settings['extruder'].max_extrude_only_velocity %}
  SAVE_GCODE_STATE NAME=load_state
  G91
  M109 S{EXTRUDER_TEMP} # Heat up hotend to 220 as default as that should work OK with most filaments.
  G92 EO
  #G1 E49 F{max_velocity} # fast-load G1 E49 F{max_velocity} # fast-load
  #G1 E2 F{max_velocity} # fast-load
  G1 E25 F{speed} # purge
  RESTORE_GCODE_STATE NAME=load_state

[force_move]
enable_force_move: False

[pause_resume]
recover_velocity: 50.

[firmware_retraction]
retract_length: 0.5
retract_speed: 40
unretract_extra_length: 0.1
unretract_speed: 30


[verify_heater heater_bed]
max_error: 120
#check_gain_time:
hysteresis: 5
heating_gain: 2

[verify_heater extruder]
max_error: 120
check_gain_time: 90
hysteresis: 5
heating_gain: 2

[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[output_pin Lights]
#hardware_pwm: False
#shutdown_value:0
#cycle_time: 0.100
pin:PE15

[gcode_arcs]
resolution: 1.0
#   An arc will be split into segments. Each segment's length will
#   equal the resolution in mm set above. Lower values will produce a
#   finer arc, but also more work for your machine. Arcs smaller than
#   the configured value will become straight lines. The default is
#   1mm.

[gcode_macro G12]
gcode:
  {% set CLEANTYPE = params.P|default(2) %}
  {% set RADI = params.R|default(2) %}
  {% set repetitions = params.S|default(2) %}
  {% set triangles = params.T|default(2) %}
  {% set th = printer.toolhead %}
  
  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    {action_respond_info("Cleaning Printhead")}
    SAVE_GCODE_STATE NAME=STATE_G12
	  G90 ; absolute positioning
    {% if params.P == '0' %}
    {action_respond_info("Cleaning Printhead back and forward")}
      G0 X405 Y400 Z1 F3600 ;start position of brush
      {% if repetitions == '1' %}
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
      {% elif repetitions == '2' %}
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush        
        G0 X405 Y400 Z1 ;start position of brush
      {% elif repetitions == '3' %}
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
      {% elif repetitions == '4' %}
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
      {% elif repetitions == '5' %}
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
        G0 X405 Y380 Z1 ;end position of brush
        G0 X405 Y400 Z1 ;start position of brush
      {% endif %}
    {% elif CLEANTYPE == '1' %}
      G0 X405 Y400 Z1 F3600 ;start position of brush
      #{repetitions}
      #{triangles}
    {% elif CLEANTYPE == '2' %}
      G0 X405 Y400 Z1 F3600 ;middle of brush
      G3 X405 Y390 R{RADI} P{repetitions}
      G2 X405 Y390 R{RADI} P{repetitions}
    {% endif %}
	  G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y//2} Z30 F3600
	  RESTORE_GCODE_STATE NAME=STATE_G12
    {action_respond_info("Cleaning Done")}
  {% endif %}

#[temperature_sensor chamber]
#sensor_type: BME280
#i2c_mcu: rpi         # This is the name of the mcu it's wired to
#i2c_bus: i2c.1
#i2c_address:118 #(0x76). Some BME280 sensors have an address of 119 (0x77).
 
[gcode_macro QUERY_ENCLOSURE]
gcode:
    {% set sensor = printer["BME280 chamber"] %}
    {action_respond_info(
        "Temperature: %.2f C\n"
        "Pressure: %.2f hPa\n"
        "Humidity: %.2f%%" % (
            sensor.temperature,
            sensor.pressure,
            sensor.humidity))}
 
[gcode_button BESTOP]
pin: rpi:gpio27
press_gcode:
#release_gcode:
   { action_emergency_stop() }
 
[gcode_button BPAUSE]
pin: rpi:gpio17
press_gcode:
#release_gcode:
   { PAUSE }
 
[gcode_button BRESUME]
pin: rpi:gpio18
press_gcode:
#release_gcode:
   { RESUME }

[output_pin nevermore]
pin: rpi:gpio13
value: 0
shutdown_value: 0

[force_move]
enable_force_move: True

[exclude_object]

[input_shaper]

########################################
# EXP1 / EXP2 (display) pins 
########################################

[board_pins]
aliases:
    # EXP1 header
    EXP1_10=<5V>, EXP1_9=<GND>,
    EXP1_8=PE7,   EXP1_7=PE15,
    EXP1_6=PD8,  EXP1_5=PD9,     # Slot in the socket on the other side
    EXP1_4=PD10,   EXP1_3=PE11,
    EXP1_2=PE10,   EXP1_1=PB2,

    # EXP2 header
    EXP2_10=<5V>, EXP2_9=<GND>,
    EXP2_8=<RST>, EXP2_7=PB11,
    EXP2_6=PA7,   EXP2_5=PE8,       # Slot in the socket on the other side
    EXP2_4=PA4,   EXP2_3=PE9,
    EXP2_2=PA5,   EXP2_1=PA6

#[display]
#lcd_type: st7920
#cs_pin: EXP1_4
#sclk_pin: EXP1_5
#sid_pin: EXP1_3
#encoder_pins: ^EXP2_3, ^EXP2_5
#click_pin: ^!EXP1_2
##kill_pin: ^!EXP2_8

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.187500, 0.100625, 0.055000, 0.118125, 0.135000, 0.135625, 0.156250
#*# 	  0.143125, 0.097500, 0.055625, 0.078125, 0.141250, 0.128125, 0.090625
#*# 	  0.140000, 0.083750, 0.001875, 0.091250, 0.089375, 0.061875, -0.027500
#*# 	  0.167500, 0.120000, 0.036250, 0.061875, 0.043750, -0.003125, -0.170625
#*# 	  0.255000, 0.198125, 0.097500, 0.058125, 0.030000, -0.075000, -0.205625
#*# 	  0.431250, 0.295625, 0.121250, 0.060000, -0.055000, -0.142500, -0.291250
#*# 	  0.660625, 0.453750, 0.231250, 0.121250, -0.025625, -0.166250, -0.329375
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 22.0
#*# max_x = 376.0
#*# min_y = 20.0
#*# max_y = 380.0
#*#
#*# [extruder]
#*#
#*# [input_shaper]
#*# shaper_type_x = ei
#*# shaper_freq_x = 90.0
#*# shaper_type_y = mzv
#*# shaper_freq_y = 61.2
#*#
#*# [bed_mesh p1]
#*# version = 1
#*# points =
#*# 	-0.004968, -0.077468, -0.098093, -0.058718, -0.033718, -0.001218, 0.016907
#*# 	-0.059968, -0.090593, -0.125593, -0.048093, -0.009343, 0.018157, -0.038718
#*# 	-0.113718, -0.133093, -0.159968, -0.076218, -0.037468, -0.048093, -0.081218
#*# 	-0.099968, -0.115593, -0.146218, -0.103093, -0.057468, -0.092468, -0.190593
#*# 	-0.036843, -0.093718, -0.153718, -0.126218, -0.117468, -0.145593, -0.262468
#*# 	0.073782, 0.003157, -0.124343, -0.141843, -0.146218, -0.197468, -0.312468
#*# 	0.315032, 0.106907, -0.048093, -0.096218, -0.171218, -0.205593, -0.326843
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 22.0
#*# max_x = 376.0
#*# min_y = 20.0
#*# max_y = 380.0
